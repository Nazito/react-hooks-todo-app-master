{"version":3,"sources":["context.js","reducer.js","components/TodoHeader.js","components/TodoList.js","components/TodoForm.js","components/CommentsForm.js","components/CommentsList.js","index.js","usePersist.js"],"names":["Store","React","createContext","todos","selectedToDoID","selectedColor","reducer","state","arguments","length","undefined","action","type","payload","includes","Object","objectSpread","concat","toConsumableArray","indexToDo","map","item","id","indexOf","selectedToDo","comments","push","newTodos","slice","filter","t","value","TodoHeader","props","react_default","a","createElement","className","children","TodoList","count","_useContext","useContext","dispatch","header","TodoHeader_TodoHeader","index","key","style","wordWrap","onClick","marginLeft","TodoForm","_useState","useState","_useState2","slicedToArray","todo","setTodo","handleTodoAdd","String","Math","random","autoFocus","placeholder","onKeyUp","event","keyCode","onChange","e","target","CommentsForm","comment","setComment","_useState3","_useState4","color","setColor","_useState5","_useState6","showPopup","setShowPopup","handlePopup","lib","onChangeComplete","hex","backgroundColor","CommentsList","find","App","store","context","persistedContext","localStorage","getItem","JSON","parse","usePersistedContext","_usePersistedReducer","_ref","_ref2","useEffect","setItem","stringify","usePersistedReducer","useReducer","_usePersistedReducer2","Provider","TodoList_TodoList","CommentsList_CommentsList","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6758f305.chunk.js","sourcesContent":["import React from \"react\";\n\n// Store Context is the global context that is managed by reducers.\n\nconst Store = React.createContext({\n  // Initial Data\n  todos: [],\n  selectedToDoID: null,\n  selectedColor: null\n});\n\nexport default Store;\n","import Store from \"./context\";\n\nexport default function reducer(state = Store, action) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      // return current state if empty\n      if (!action.payload) {\n        return state;\n      }\n      // return current state if duplicate\n      if (state.todos.includes(action.payload)) {\n        return state;\n      }\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case \"ADD_COMMENT\":\n      const indexToDo = state.todos\n        .map((item) => {\n          return item.id;\n        })\n        .indexOf(state.selectedToDoID);\n\n      const selectedToDo = state.todos[indexToDo];\n      if (selectedToDo) {\n        selectedToDo.comments.push(action.payload);\n        const newTodos = [\n          ...state.todos.slice(0, indexToDo),\n          selectedToDo,\n          ...state.todos.slice(indexToDo + 1)\n        ];\n\n        return {\n          ...state,\n          todos: newTodos\n        };\n      }\n\n      return {\n        ...state\n      };\n    case \"DELETE\":\n      return {\n        ...state,\n        todos: state.todos.filter((t) => t.value !== action.payload)\n      };\n    case \"SELECTED_COLOR\":\n      return {\n        ...state,\n        selectedColor: action.payload\n      };\n    case \"SELECTED_TO_DO\":\n      return {\n        ...state,\n        selectedToDoID: action.payload.id\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\n\nexport const TodoHeader = props => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8\">\n        <h5>Todo List</h5>\n      </div>\n      <div className=\"col-md-4\">{props.children}</div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Store from \"../context\";\nimport \"./TodoList.css\";\nimport { TodoHeader } from \"./TodoHeader\";\n\nexport default function TodoList() {\n  const { state, dispatch } = useContext(Store);\n\n  const pluralize = count =>\n    count > 1 ? `There are ${count} todos.` : `There is ${count} todo.`;\n\n  let header =\n    state.todos.length === 0 ? (\n      <h4 className=\"ml-3\">Yay! All todos are done! Take a rest!</h4>\n    ) : (\n      <TodoHeader>\n        <span className=\"float-right\">{pluralize(state.todos.length)}</span>\n      </TodoHeader>\n    );\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <br />\n            {header}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"list-group\">\n              {state.todos.map((t, index) => (\n                <li\n                  key={index}\n                  className={\n                    state.selectedToDoID === t.id\n                      ? \"list-group-item d-flex align-items-center p-0 borderLeft5\"\n                      : \"list-group-item d-flex align-items-center p-0\"\n                  }\n                >\n                  <div\n                    className=\"col-md-8 p-3\"\n                    style={{ wordWrap: \"break-word\" }}\n                    onClick={() =>\n                      dispatch({ type: \"SELECTED_TO_DO\", payload: t })\n                    }\n                  >\n                    {t.value}\n                  </div>\n\n                  <div\n                    onClick={() =>\n                      dispatch({ type: \"SELECTED_TO_DO\", payload: t })\n                    }\n                    className=\"col-md-1 btn-primary btn-sm p-0 mb-3 mt-3 mr-0 ml-0 justify-content-center d-flex rounded-circle\"\n                  >\n                    {t.comments ? t.comments.length : \"0\"}\n                  </div>\n\n                  <button\n                    className=\"float-right btn btn-outline-danger btn-sm p-1 pr-3 pl-3\"\n                    style={{ marginLeft: 15 }}\n                    onClick={() =>\n                      dispatch({ type: \"DELETE\", payload: t.value })\n                    }\n                  >\n                    Delete\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Store from \"../context\";\n\nexport default function TodoForm() {\n  const { dispatch } = useContext(Store);\n\n  // Creating a local state to have currently writing\n  // todo item that will be sent to the global store.\n  const [todo, setTodo] = useState(\"\");\n\n  function handleTodoChange(e) {\n    setTodo(e.target.value);\n  }\n\n  function handleTodoAdd() {\n    dispatch({\n      type: \"ADD_TODO\",\n      payload: { value: todo, comments: [], id: String(Math.random()).slice(2) }\n    });\n    setTodo(\"\");\n  }\n\n  function handleSubmitForm(event) {\n    if (event.keyCode === 13) handleTodoAdd();\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <br />\n        <div className=\"input-group\">\n          <input\n            className=\"form-control\"\n            value={todo}\n            autoFocus={true}\n            placeholder=\"Enter new todo\"\n            onKeyUp={handleSubmitForm}\n            onChange={handleTodoChange}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\" onClick={handleTodoAdd}>\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport Store from \"../context\";\n\nexport default function CommentsForm() {\n  const { dispatch } = useContext(Store);\n\n  // Creating a local state to have currently writing\n  // todo item that will be sent to the global store.\n  const [comment, setComment] = useState(\"\");\n  const [color, setColor] = useState(\"#000000\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  let handlePopup = () => {\n    setShowPopup(!showPopup);\n  };\n\n  let handleTodoChange = e => {\n    setComment(e.target.value);\n  };\n\n  let handleTodoAdd = () => {\n    dispatch({\n      type: \"ADD_COMMENT\",\n      payload: { value: comment, selectedColor: color }\n    });\n    dispatch({ type: \"SELECTED_COLOR\", payload: color });\n    setComment(\"\");\n  };\n\n  let handleSubmitForm = event => {\n    if (event.keyCode === 13) handleTodoAdd();\n  };\n\n  return (\n    <div className=\"row container-form\">\n      <br />\n\n      {showPopup ? (\n        <div className=\"d-flex flex-column colorPicker\">\n          <SketchPicker\n            color={color}\n            onChangeComplete={color => {\n              setColor(color.hex);\n            }}\n          />\n          <button onClick={handlePopup} className=\"btn btn-outline-success\">\n            OK\n          </button>\n        </div>\n      ) : null}\n\n      <div className=\"col-md-12 d-flex pt-3 pb-3\">\n        <div className=\"p-2 border mr-2\">\n          <div\n            style={{ backgroundColor: color }}\n            className=\"item-flag m-1\"\n            onClick={handlePopup}\n          ></div>\n        </div>\n\n        <div className=\"input-group\">\n          <input\n            className=\"form-control h-auto\"\n            value={comment}\n            autoFocus={true}\n            placeholder=\"Enter new comment\"\n            onKeyUp={handleSubmitForm}\n            onChange={handleTodoChange}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\" onClick={handleTodoAdd}>\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"./CommentsList.css\";\nimport Store from \"../context\";\n\nexport default function CommentsList() {\n  const { state } = useContext(Store);\n\n  const selectedToDo = state.todos.find(item => {\n    return item.id === state.selectedToDoID;\n  });\n\n  let header = !selectedToDo ? (\n    <h4>No selected todo!</h4>\n  ) : (\n    <h4 className=\"d-flex\">\n      {!selectedToDo.comments.length\n        ? `No comments for this todos!`\n        : `Comments for  #${selectedToDo.id}`}\n    </h4>\n  );\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">{header}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"list-group\">\n              {selectedToDo &&\n                selectedToDo.comments &&\n                selectedToDo.comments.map((t, index) => (\n                  <li\n                    key={index}\n                    className=\"list-group-item d-flex align-items-center p-0\"\n                  >\n                    <div\n                      className=\"item-flag m-1 ml-3\"\n                      style={{ backgroundColor: t.selectedColor }}\n                    ></div>\n                    <div className=\"col-10 p-3\">{t.value}</div>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Store from \"./context\";\nimport reducer from \"./reducer\";\n\nimport { usePersistedContext, usePersistedReducer } from \"./usePersist\";\n\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport CommentsForm from \"./components/CommentsForm\";\nimport CommentsList from \"./components/CommentsList\";\n\nfunction App() {\n  // create a global store to store the state\n  const store = usePersistedContext(useContext(Store), \"state\");\n\n  // `todos` will be a state manager to manage state.\n  const [state, dispatch] = usePersistedReducer(\n    useReducer(reducer, store),\n    \"state\" // The localStorage key\n  );\n\n  return (\n    // State.Provider passes the state and dispatcher to the down\n    <Store.Provider value={{ state, dispatch }}>\n      <div className=\"row d-flex justify-content-around pt-5\">\n        <div className=\"col-md-5 card pb-3\">\n          <TodoForm />\n          <TodoList />\n        </div>\n        <div className=\"col-md-5 card pb-3\">\n          <CommentsForm />\n          <CommentsList />\n        </div>\n      </div>\n    </Store.Provider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","import { useEffect } from \"react\";\n\nexport function usePersistedContext(context, key = \"state\") {\n  const persistedContext = localStorage.getItem(key);\n  return persistedContext ? JSON.parse(persistedContext) : context;\n}\n\nexport function usePersistedReducer([state, dispatch], key = \"state\") {\n  useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [state]);\n  return [state, dispatch];\n}\n"],"sourceRoot":""}